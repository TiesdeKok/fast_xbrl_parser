name: Compile Command Line Utility

on:
  workflow_dispatch:

jobs:
  windows:
    name: windows
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - id: win64
            target-name:  x86_64-pc-windows-msvc
            architecture: x64
          - id: win32
            target-name: i686-pc-windows-msvc	
            architecture: x86
    steps:
      - uses: actions/checkout@v2
      - uses: sfackler/actions/rustup@master
      ## Compile binary
      - run: rustup target add ${{ matrix.target.target-name }}
      - run: cargo build --release --target ${{ matrix.target.target-name }}
      ## Upload binary
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/${{ matrix.target.target-name }}/release/fast_xbrl_parser.exe

  macos:
    name: macos
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - id: mac64
            target-name: x86_64-apple-darwin
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2
      - uses: sfackler/actions/rustup@master
      ## Compile binary
      - run: cargo build --release --target ${{ matrix.target.target-name }}
      ## Upload binary
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/${{ matrix.target.target-name }}/release/fast_xbrl_parser*
          
  linux:
    name: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
    container: quay.io/pypa/manylinux_2_24_x86_64:latest
    env:
      RUSTFLAGS: -C target-cpu=k8
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # Install SSH
      - run: apt update && apt install libffi-dev libssl-dev -y
      # Compile the command line utility
      - run: OPENSSL_STATIC=1 OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu/ OPENSSL_INCLUDE_DIR=/usr/include/openssl cargo build --release --target ${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/${{ matrix.target }}/release/fast_xbrl_parser

## Current issues to fix:
## 1) The 32 and 64 bit binaries for windows ahre the same name and overwrite each other
## 2) The Mac OS binary is giving an error

## TODO:
## [x] It would make more sense to split the Python package and CLU into seperate workspaces, this way the dependencies would be seperate